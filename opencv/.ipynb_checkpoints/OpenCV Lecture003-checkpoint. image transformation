{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<img src='./img/intel-logo.jpg' width=10%> \n",
    "    \n",
    "<font size=7><div align='left'>OpenCV 기초강좌<br>\n",
    "<br>\n",
    "<font size=6><div align='left'>03. Image Transformation<br>\n",
    "<img src='./img/OpenCV_Logo_with_text.png' width=20%, Fig2> \n",
    "    \n",
    "<font size=3><div align='right'>\n",
    "<div align='right'>성  민  석 (Minsuk  Sung)</div>\n",
    "<div align='right'>류  회  성 (Hoesung Ryu)</div>\n",
    "<div align='right'>이  인  구 (Ike Lee)</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc": true
   },
   "source": [
    "<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n",
    "<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#이미지-크기-확인하기\" data-toc-modified-id=\"이미지-크기-확인하기-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>이미지 크기 확인하기</a></span></li><li><span><a href=\"#이미지-확대/축소(scaling)\" data-toc-modified-id=\"이미지-확대/축소(scaling)-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>이미지 확대/축소(scaling)</a></span><ul class=\"toc-item\"><li><span><a href=\"#이미지-축소\" data-toc-modified-id=\"이미지-축소-2.1\"><span class=\"toc-item-num\">2.1&nbsp;&nbsp;</span>이미지 축소</a></span></li><li><span><a href=\"#이미지-확대\" data-toc-modified-id=\"이미지-확대-2.2\"><span class=\"toc-item-num\">2.2&nbsp;&nbsp;</span>이미지 확대</a></span></li></ul></li><li><span><a href=\"#이동-(Translation)\" data-toc-modified-id=\"이동-(Translation)-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>이동 (Translation)</a></span></li><li><span><a href=\"#회전(Rotation)\" data-toc-modified-id=\"회전(Rotation)-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>회전(Rotation)</a></span></li></ul></div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 이미지 크기 확인하기 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-15T17:33:36.142460Z",
     "start_time": "2019-12-15T17:33:36.138312Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import cv2\n",
    "import numpy as np\n",
    "\n",
    "img = cv2.imread(\"./img/toy.jpg\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-05T06:30:10.982690Z",
     "start_time": "2019-12-05T06:30:10.977428Z"
    }
   },
   "outputs": [],
   "source": [
    "# 가로 x 세로 x 채널(RGB)\n",
    "img.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-05T06:30:10.990247Z",
     "start_time": "2019-12-05T06:30:10.985296Z"
    }
   },
   "outputs": [],
   "source": [
    "# 이미지 타입\n",
    "print(img.dtype)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 이미지 확대/축소(scaling)\n",
    "\n",
    "```(python)\n",
    "cv2.resize(img,              # 이미지\n",
    "            dsize=(가로,세로), # 원하는사이즈\n",
    "            interpolation= ) # 보간법 설정 \n",
    "```\n",
    "\n",
    "1. 이미지의 크기를 변경하는 경우, 픽셀은 추정해서 값을 할당해야합니다. 이때 보간법을 이용하여 픽셀을 추정합니다. \n",
    "\n",
    "\n",
    "2. 보간법의 종류\n",
    "\n",
    " 보간법의 종류는 아래와 같다. \n",
    " \n",
    "|종류|의미|\n",
    "|:---:|:---:|\n",
    "|cv2.INTER_LINEAR|쌍 선형 보간법|\n",
    "|cv2.INTER_NEAREST|이웃 보간법|\n",
    "|cv2.INTER_LINEAR_EXACT|비트 쌍 선형 보간법|\n",
    "|cv2.INTER_CUBIC|바이큐빅 보간법|\n",
    "|cv2.INTER_AREA|영역 보간법|\n",
    "|cv2.INTER_LANCZOS4|Lanczos 보간법|\n",
    "\n",
    "\n",
    " - 이미지를 확대하는경우: 바이큐빅 보간법, 쌍선형 보간법을 많이 사용한다. \n",
    " \n",
    " \n",
    " - 이미지를 축소하는 경우: 영역 보간법을 많이 사용한다. \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 이미지 축소"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-05T06:30:10.996954Z",
     "start_time": "2019-12-05T06:30:10.992540Z"
    }
   },
   "outputs": [],
   "source": [
    "# 보간법 바이큐빅을 사용하여 640 x 480 으로 크기를 조절하자 \n",
    "re_img = cv2.resize(img, \n",
    "                    dsize=(640, 480),\n",
    "                    interpolation=cv2.INTER_CUBIC)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-05T06:30:11.510333Z",
     "start_time": "2019-12-05T06:30:10.999251Z"
    },
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "re_img = cv2.cvtColor(re_img, cv2.COLOR_BGR2RGB)\n",
    "\n",
    "# b, g, r = cv2.split(re_img)\n",
    "# re_img =cv2.merge([r,g,b])\n",
    "\n",
    "plt.title(\"origin_image\")\n",
    "plt.imshow(img)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "plt.title(\"resize_shrink_image\")\n",
    "plt.imshow(re_img)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 이미지 확대 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-15T17:34:55.192736Z",
     "start_time": "2019-12-15T17:34:55.187240Z"
    }
   },
   "outputs": [],
   "source": [
    "import os \n",
    "\n",
    "os.getcwd()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-15T17:35:45.161792Z",
     "start_time": "2019-12-15T17:35:45.159079Z"
    }
   },
   "outputs": [],
   "source": [
    "# 보간법 바이큐빅을 사용하여 1000 x 1000 으로 크기를 조절하자 \n",
    "\n",
    "#img = cv2.imread('./dron_img/5.car.jpg')\n",
    "img = cv2.imread(\"./img/toy.jpg\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-15T17:36:01.669347Z",
     "start_time": "2019-12-15T17:36:01.660801Z"
    }
   },
   "outputs": [],
   "source": [
    "#re_img = cv2.resize(img, dsize=(1920, 1080))\n",
    "re_img = cv2.resize(img, \n",
    "                    dsize=(1920, 1080),\n",
    "                    interpolation=cv2.INTER_CUBIC)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-05T06:30:12.169604Z",
     "start_time": "2019-12-05T06:30:11.525611Z"
    }
   },
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "b, g, r = cv2.split(re_img)\n",
    "re_img =cv2.merge([r,g,b])\n",
    "\n",
    "plt.title(\"origin_image\")\n",
    "plt.imshow(img)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "plt.title(\"resize_zoom_image\")\n",
    "plt.imshow(re_img)\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 이동 (Translation)\n",
    "\n",
    "`cv2.warpAffine`를 사용하여 이미지의 위치를 이동합니다. \n",
    "\n",
    "```\n",
    "cv2.warpAffine(src, M, dsize)\n",
    "    Parameters:\t\n",
    "    src – Image\n",
    "    M – 변환 행렬\n",
    "    dsize (tuple) – output image size(ex; (width=columns, height=rows)\n",
    "   \n",
    "```\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-05T06:30:12.704001Z",
     "start_time": "2019-12-05T06:30:12.172735Z"
    }
   },
   "outputs": [],
   "source": [
    "rows, cols = img.shape[:2]\n",
    "\n",
    "# 변환 행렬, X축으로 00, Y축으로 100 이동\n",
    "M = np.float32([[1,0,0],[0,1,100]])\n",
    "dst = cv2.warpAffine(img, M,(cols, rows))\n",
    "\n",
    "# plt.show \n",
    "plt.title(\"Original\")\n",
    "plt.imshow(img)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "plt.title(\"Translation\")\n",
    "plt.imshow(dst)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 회전(Rotation)\n",
    "\n",
    "\n",
    "물체를 평면상의 한 점을 중심으로 $\\theta$ 만큼 회전하는 변환 입니다. 양의 각도는 시계반대방향으로 회전을 합니다. 역시 변환행렬이 필요한며 변환행렬을 생성하는 함수는 `cv2.getRotationMatrix2D()` 함수입니다\n",
    "\n",
    "\n",
    "```\n",
    "cv2.getRotationMatrix2D(center, angle, scale) → M\n",
    "        Parameters:\t\n",
    "        center – 이미지의 중심 좌표\n",
    "        angle – 회전 각도\n",
    "        scale – scale factor\n",
    "```\n",
    "\n",
    "위 결과에서 나온 변환행렬을 `cv2.warpAffine()` 함수에 적용합니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-05T06:30:13.300804Z",
     "start_time": "2019-12-05T06:30:12.706496Z"
    },
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "rows, cols = img.shape[:2]\n",
    "\n",
    "# 이미지의 중심점을 기준으로 90도 회전 하면서 0.5배 Scale\n",
    "M= cv2.getRotationMatrix2D((cols/2, rows/2),90, 0.5)\n",
    "\n",
    "dst = cv2.warpAffine(img, M,(cols, rows))\n",
    "\n",
    "cv2.imshow('Original', img)\n",
    "cv2.imshow('Rotation', dst)\n",
    "\n",
    "# plt.show \n",
    "plt.title(\"Original\")\n",
    "plt.imshow(img)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "plt.title(\"Rootation\")\n",
    "plt.imshow(dst)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": true,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
