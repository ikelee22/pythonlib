{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src='./img/intel-logo.jpg' width=10%> \n",
    "    \n",
    "<font size=7><div align='left'>Matplotlib Introduction<br>\n",
    "<br>\n",
    "<font size=6><div align='left'>01. Matplotlib 개요<br>\n",
    "<img src='./img/matplotlib_logo.png' width=30%, Fig2> \n",
    "    \n",
    "<font size=3><div align='right'>\n",
    "<div align='right'>성  민  석 (Minsuk  Sung)</div>\n",
    "<div align='right'>류  회  성 (Hoesung Ryu)</div>\n",
    "<div align='right'>이  인  구 (Ike Lee)</div>\n",
    "    \n",
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "toc": true
   },
   "source": [
    "<h1>Table of Contents<span class=\"tocSkip\"></span></h1>\n",
    "<div class=\"toc\"><ul class=\"toc-item\"><li><span><a href=\"#Matplotlib-개요\" data-toc-modified-id=\"Matplotlib-개요-1\"><span class=\"toc-item-num\">1&nbsp;&nbsp;</span>Matplotlib 개요</a></span></li><li><span><a href=\"#Matplotlib-사용법\" data-toc-modified-id=\"Matplotlib-사용법-2\"><span class=\"toc-item-num\">2&nbsp;&nbsp;</span>Matplotlib 사용법</a></span></li><li><span><a href=\"#라인-플롯(line-plot)\" data-toc-modified-id=\"라인-플롯(line-plot)-3\"><span class=\"toc-item-num\">3&nbsp;&nbsp;</span>라인 플롯(line plot)</a></span></li><li><span><a href=\"#그래프-스타일-지정\" data-toc-modified-id=\"그래프-스타일-지정-4\"><span class=\"toc-item-num\">4&nbsp;&nbsp;</span>그래프 스타일 지정</a></span><ul class=\"toc-item\"><li><span><a href=\"#color(색깔)\" data-toc-modified-id=\"color(색깔)-4.1\"><span class=\"toc-item-num\">4.1&nbsp;&nbsp;</span>color(색깔)</a></span></li><li><span><a href=\"#marker(마커)\" data-toc-modified-id=\"marker(마커)-4.2\"><span class=\"toc-item-num\">4.2&nbsp;&nbsp;</span>marker(마커)</a></span></li><li><span><a href=\"#마커사이즈-조정\" data-toc-modified-id=\"마커사이즈-조정-4.3\"><span class=\"toc-item-num\">4.3&nbsp;&nbsp;</span>마커사이즈 조정</a></span></li><li><span><a href=\"#투명도(alpha)-조절\" data-toc-modified-id=\"투명도(alpha)-조절-4.4\"><span class=\"toc-item-num\">4.4&nbsp;&nbsp;</span>투명도(alpha) 조절</a></span></li><li><span><a href=\"#line-style\" data-toc-modified-id=\"line-style-4.5\"><span class=\"toc-item-num\">4.5&nbsp;&nbsp;</span>line style</a></span></li><li><span><a href=\"#other-style\" data-toc-modified-id=\"other-style-4.6\"><span class=\"toc-item-num\">4.6&nbsp;&nbsp;</span>other style</a></span></li></ul></li><li><span><a href=\"#그림-범위-지정\" data-toc-modified-id=\"그림-범위-지정-5\"><span class=\"toc-item-num\">5&nbsp;&nbsp;</span>그림 범위 지정</a></span><ul class=\"toc-item\"><li><span><a href=\"#틱-설정\" data-toc-modified-id=\"틱-설정-5.1\"><span class=\"toc-item-num\">5.1&nbsp;&nbsp;</span>틱 설정</a></span></li></ul></li></ul></div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Matplotlib 개요 \n",
    "\n",
    "Matplotlib는 python에서 가장 많이 사용되는 데이타 시각화(Data Visualization) 패키지입니다. Matplotlib는 라인 플롯, 바 차트, 파이차트, 히스토그램, Box Plot, Scatter Plot 등을 비롯하여 다양한 차트와 플롯 스타일을 지원하며, [Matplotlib.org](https://matplotlib.org) 갤러리 웹페이지에서 다양한 샘플 차트를 볼 수 있습니다.\n",
    "\n",
    "\n",
    "## Matplotlib 사용법 \n",
    "\n",
    "- Matplotlib 에서는 간단한 플로팅을 위해 `pyplot` 모듈이 존재 합니다. 이러한 pyplot 모듈이 IPython과 결합 될 때 MATLAB과 유사한 인터페이스를 제공합니다. Matplotlib에서  `pyplot` 모듈을 사용할 때는 보통 다음과 같이 `plt` 라는 별칭(alias)으로 임포트 하여 사용 하는 것이 관례입니다. \n",
    "\n",
    "```python\n",
    "import matplotlib.pyplot as plt\n",
    "```\n",
    "\n",
    "- 주피터 노트북에서 Matplotlib는을 사용하는 경우에는 다음과 같은 명령으로 노트북 내부에 그림을 표시하도록 설정해 주어야 합니다. \n",
    "\n",
    "```python \n",
    "%matplotlib inline\n",
    "```\n",
    "\n",
    "- 라이브러리 도움말은 다음과 같은 명령어로 볼 수 있습니다. \n",
    "\n",
    "```python\n",
    "help(plt)\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 라인 플롯(line plot)\n",
    "\n",
    " 라인 플롯(line plot)은 간단한 선을 그려 데이터가 시간, 순서 등에 따라 어떻게 변화하는지 보여주기 위해서 사용 합니다. \n",
    " \n",
    " - `plot()` 명령어를 사용하여 선을 그릴 수 있습니다. \n",
    " - `show` 명령어는 시각화 명령을 실제 차트로 렌더링을 해줍니다. \n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-22T07:53:42.582836Z",
     "start_time": "2019-12-22T07:53:42.578778Z"
    }
   },
   "outputs": [],
   "source": [
    "# import 하기 \n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-22T07:53:59.809036Z",
     "start_time": "2019-12-22T07:53:59.805806Z"
    }
   },
   "outputs": [],
   "source": [
    "# 정의역, 치역 설정 \n",
    "x = [ 1,  2,  3,  4,  5,  6,  7]\n",
    "y = [50, 51, 52, 48, 47, 49, 46]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-22T07:54:05.345630Z",
     "start_time": "2019-12-22T07:54:05.158709Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# plt 에서 plot 명령어를 사용합니다. \n",
    "plt.plot(x,y)\n",
    "# show 명령어를 사용하여 그래프가 보일 수 있습니다. \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 그래프 스타일 지정\n",
    "\n",
    " `plot` 명령어에서는 추가 문자를 사용하여 다양한 스타일을 지원한합니다.\n",
    " \n",
    "### color(색깔)\n",
    "\n",
    "```python\n",
    "plt.plot(color = 색 이름 혹은 약자 )\n",
    "```\n",
    "\n",
    "색 이름 혹은 약자를 사용하여 색깔을 지정 할 수 있으며 다음과 같은 색깔이 있다. \n",
    "\n",
    "|문자열|약자|\n",
    "|:--:|:--:|\n",
    "|blue|\tb|\n",
    "|green|\tg|\n",
    "|red|\tr|\n",
    "|cyan|\tc|\n",
    "|magenta|\tm|\n",
    "|yellow\t|y|\n",
    "|black\t|k|\n",
    "|white|\tw|"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-22T08:13:15.952279Z",
     "start_time": "2019-12-22T08:13:15.788776Z"
    }
   },
   "outputs": [],
   "source": [
    "# 선 색깔을 검은 색으로 바꾸기  \n",
    "plt.plot(x,y,color='g')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### marker(마커) \n",
    "\n",
    "데이터 위치를 나타내는 기호를 마커(marker)라고 하며, 마커의 종류는 다음과 같습니다.\n",
    "\n",
    "|마커 문자열\t|의미|\n",
    "|--|--|\n",
    "|.|\tpoint marker|\n",
    "|,|\tpixel marker|\n",
    "|o|\tcircle marker|\n",
    "|v|\ttriangle_down marker|\n",
    "|^|\ttriangle_up marker|\n",
    "|<|\ttriangle_left marker|\n",
    "|>|\ttriangle_right marker|\n",
    "|1|\ttri_down marker|\n",
    "|2|\ttri_up marker|\n",
    "|3|\ttri_left marker|\n",
    "|4|\ttri_right marker|\n",
    "|s|\tsquare marker|\n",
    "|p|\tpentagon marker|\n",
    "|*|\tstar marker|\n",
    "|h|\thexagon1 marker\n",
    "|H|\thexagon2 marker|\n",
    "|+|\tplus marker|\n",
    "|x|\tx marker\n",
    "|D|\tdiamond marker|\n",
    "|d|\tthin_diamond marker|"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-23T07:08:55.510517Z",
     "start_time": "2019-12-23T07:08:55.344541Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# 그래프 위에 다이아몬드 마크 표시하기 \n",
    "plt.plot(x,y,'D-')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 마커사이즈 조정 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-23T07:19:21.866472Z",
     "start_time": "2019-12-23T07:19:21.684806Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "plt.plot(x, y,\n",
    "         color='blue',\n",
    "         marker='+',\n",
    "         linestyle='',\n",
    "         markersize=20)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 투명도(alpha) 조절 \n",
    "\n",
    "alpha는 0보터 1까지의 값을 가지는데, 투명도를 조정한다. alpha=1이면 가장 진하고, alpha=0이면 투명해서 아무 것도 보이지 않는다. alpha=0.5이면 어느 정도 투명하게 보인다. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-23T07:18:50.725768Z",
     "start_time": "2019-12-23T07:18:50.537251Z"
    }
   },
   "outputs": [],
   "source": [
    "plt.plot(x, y, 'g<', alpha=0.5) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### line style \n",
    "\n",
    "- 실선(solid), 대시선(dashed), 점선(dotted), 대시-점선(dash-dit)과 같은 다양한 스타일의 선을 사용 할 수 있습니다.\n",
    "\n",
    "\n",
    "|선 스타일 문자열\t|의미|\n",
    "|--|--|\n",
    "|-\t|solid line style|\n",
    "|--|\tdashed line style|\n",
    "|-.|\tdash-dot line style|\n",
    "|:\t|dotted line style|\n",
    "\n",
    "- `linewidth` 명령어를 사용하여 굵기도 조정 할 수 있습니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-23T07:12:01.967408Z",
     "start_time": "2019-12-23T07:12:01.797650Z"
    }
   },
   "outputs": [],
   "source": [
    "# line style으로 dot으로 바꾸기 \n",
    "# plt.plot(x,y, linestyle='dotted')\n",
    "plt.plot(x,y, linestyle=':')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-23T07:10:39.454336Z",
     "start_time": "2019-12-23T07:10:39.290645Z"
    }
   },
   "outputs": [],
   "source": [
    "# 다이아몬트 마커와 굵기5로 조정\n",
    "plt.plot(x,y,'D-',lw=2)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### other style \n",
    " \n",
    " 라인 플롯에서는 앞서 설명한 세 가지 스타일 이외에도 여러가지 스타일을 지정할 수 있습니다.\n",
    " \n",
    " \n",
    "|스타일 문자열\t|약자|\t의미|\n",
    "|--|--||\n",
    "|color\t|c\t|선| 색깔|\n",
    "|linewidth\t|lw\t|선 굵기|\n",
    "|linestyle\t|ls\t|선 스타일|\n",
    "|marker\t\t||마커 종류|\n",
    "|markersize\t|ms\t|마커 크기|\n",
    "|markeredgecolor\t|mec|\t마커 선 색깔|\n",
    "|markeredgewidth\t|mew|\t마커 선 굵기|\n",
    "|markerfacecolor\t|mfc|\t마커 내부 색깔|"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-22T08:39:58.029027Z",
     "start_time": "2019-12-22T08:39:57.856322Z"
    }
   },
   "outputs": [],
   "source": [
    "plt.plot(x, y, c=\"b\",\n",
    "         lw=5, ls=\"--\", marker=\"o\", ms=15, mec=\"g\", mew=5, mfc=\"r\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 그림 범위 지정\n",
    "\n",
    "그림의 범위를 수동으로 지정하고 싶을때는`xlim` 명령과 `ylim` 명령어를 사용합니다. \n",
    "이 명령들은 그림의 범위가 되는 x축, y축의 최소값과 최대값을 지정하여 사용 할 수 있습니다."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-22T08:48:48.501359Z",
     "start_time": "2019-12-22T08:48:48.331147Z"
    }
   },
   "outputs": [],
   "source": [
    "plt.plot(x,y)\n",
    "# x 범위 설정 \n",
    "plt.xlim(3, 5)\n",
    "# y 범위 설정 \n",
    "plt.ylim(46, 49)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 틱 설정 \n",
    "\n",
    "틱(tick)은 차트에서 축의 표시지점을 뜻합니다. 이 틱에 쓰여진 숫자 혹은 글자를 틱 라벨 (tick label)이라고 하며, 보통 Matplotlib에서 자동으로 전해주지만, 만약 수동으로 설정하고 싶다면, `xticks` 명령이나 `yticks` 명령을 사용합니다. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2019-12-22T08:53:18.605227Z",
     "start_time": "2019-12-22T08:53:18.492003Z"
    },
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "plt.plot(x,y)\n",
    "\n",
    "# 범위 설정 \n",
    "plt.xlim(3, 5) # x 범위 설정 \n",
    "plt.ylim(46, 49) # y 범위 설정 \n",
    "\n",
    "# 틱 설정\n",
    "plt.xticks([3,4,5]) # 틱 설정\n",
    "plt.yticks([46,47,48,49]) # y틱 설정 \n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": true,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
